{"version":3,"sources":["components/PostsList.tsx","utils/fetchClient.ts","types/Errors.ts","api/api.ts","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","onPost","length","className","map","post","id","title","type","classNames","onClick","onClickHandle","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","Errors","client","getComments","deleteComment","Loader","NewCommentForm","postId","onClickHandleAdd","commentsLength","useState","name","email","textarea","input","setInput","isLoading","setLoading","errors","setErrors","postedComment","newComment","prev","finally","filteredErrors","errorName","currErrors","filter","error","checkErrors","includes","onSubmit","e","preventDefault","str","isName","isEmail","isTextarea","isValidatedEmail","test","NAME","EMAIL","TEXTAREA","htmlFor","placeholder","value","onChange","target","PostDetails","postDetail","comments","setComments","isOpenForm","setOpenForm","isError","setError","fetchingComments","a","removeComment","useEffect","href","currComments","comment","onClickHandleRemove","UserSelector","users","user","onChangeUser","isOpen","setOpen","dropDownRef","useRef","hadnleOutsideClick","current","contains","document","addEventListener","removeEventListener","ref","state","role","currUser","App","setUsers","setPosts","selectedPost","setSelectedPost","selectedUser","setSelectedUser","isPostsVisible","setPostsVisible","fetchingUsers","fetchingPosts","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a2b2f4be.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[];\n  selectedPostId: number;\n  onPost: (postDetail: Post | null) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  onPost,\n}) => {\n  const onClickHandle = (post: Post) => {\n    onPost(selectedPostId === post.id ? null : post);\n  };\n\n  if (!posts.length) {\n    return (\n      <div\n        className=\"notification is-warning\"\n        data-cy=\"NoPostsYet\"\n      >\n        No posts yet\n      </div>\n    );\n  }\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{post.id}</td>\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={classNames(\n                    'button',\n                    'is-link',\n                    { 'is-light': selectedPostId !== post.id },\n                  )}\n                  onClick={() => onClickHandle(post)}\n                >\n                  {selectedPostId === post.id\n                    ? 'Close'\n                    : 'Open'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum Errors {\n  NAME,\n  EMAIL,\n  TEXTAREA,\n}\n","import { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPosts = (id: number) => {\n  return client.get<Post[]>(`/posts?userId=${id}`);\n};\n\nexport const getComments = (id: number) => {\n  return client.get<Comment[]>(`/comments?postId=${id}`);\n};\n\nexport const setComment = (data: Comment) => {\n  return client.post('/comments', data);\n};\n\nexport const deleteComment = (id: number) => {\n  return client.delete(`/comments/${id}`);\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState, ChangeEvent } from 'react';\n\nimport { setComment } from '../api/api';\n\nimport { Errors } from '../types/Errors';\nimport { Comment } from '../types/Comment';\n\nfunction validateEmail(str: string) {\n  const reg = /\\S+@\\S+\\.\\S+/;\n\n  return reg.test(str);\n}\n\ntype Props = {\n  postId: number;\n  onClickHandleAdd: (comment: Comment) => void;\n  commentsLength: number;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  onClickHandleAdd,\n  commentsLength,\n}) => {\n  const [input, setInput] = useState({ name: '', email: '', textarea: '' });\n  const [isLoading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<Errors[]>([]);\n\n  const postedComment = () => {\n    setLoading(true);\n\n    const newComment: Comment = {\n      id: commentsLength + 1,\n      postId,\n      name: input.name,\n      email: input.email,\n      body: input.textarea,\n    };\n\n    setComment(newComment)\n      .then(() => {\n        setInput(prev => ({ ...prev, textarea: '' }));\n        onClickHandleAdd(newComment);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const filteredErrors = (errorName: Errors) => {\n    setErrors(currErrors => currErrors.filter(error => (\n      error !== errorName\n    )));\n  };\n\n  const checkErrors = (errorName: Errors) => errors.includes(errorName);\n\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const isName = input.name.length;\n    const isEmail = input.email.length;\n    const isTextarea = input.textarea.length;\n    const isValidatedEmail = validateEmail(input.email);\n\n    if (!isName) {\n      setErrors(currErrors => ([...currErrors, Errors.NAME]));\n    }\n\n    if (!isEmail || !isValidatedEmail) {\n      setErrors(currErrors => ([...currErrors, Errors.EMAIL]));\n    }\n\n    if (!isTextarea) {\n      setErrors(currErrors => ([...currErrors, Errors.TEXTAREA]));\n    }\n\n    if (isName && isEmail && isTextarea && isValidatedEmail) {\n      postedComment();\n    }\n  };\n\n  const onChangName = (e: ChangeEvent<HTMLInputElement>) => {\n    filteredErrors(Errors.NAME);\n    setInput(prev => ({ ...prev, name: e.target.value }));\n  };\n\n  const onChangEmail = (e: ChangeEvent<HTMLInputElement>) => {\n    filteredErrors(Errors.EMAIL);\n    setInput(prev => ({ ...prev, email: e.target.value }));\n  };\n\n  const onChangTextarea = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    filteredErrors(Errors.TEXTAREA);\n    setInput(prev => ({ ...prev, textarea: e.target.value }));\n  };\n\n  const onReset = () => {\n    setErrors([]);\n    setInput({ name: '', email: '', textarea: '' });\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={onSubmit}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames(\n              'input',\n              { 'is-danger': checkErrors(Errors.NAME) },\n            )}\n            value={input.name}\n            onChange={onChangName}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {checkErrors(Errors.NAME) && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {checkErrors(Errors.NAME) && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames(\n              'input',\n              { 'is-danger': checkErrors(Errors.EMAIL) },\n            )}\n            value={input.email}\n            onChange={onChangEmail}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {checkErrors(Errors.EMAIL) && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {checkErrors(Errors.EMAIL) && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames(\n              'textarea',\n              { 'is-danger': checkErrors(Errors.TEXTAREA) },\n            )}\n            value={input.textarea}\n            onChange={onChangTextarea}\n          />\n        </div>\n\n        {checkErrors(Errors.TEXTAREA) && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames(\n              'button',\n              'is-link',\n              { 'is-loading': isLoading },\n            )}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={onReset}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { getComments, deleteComment } from '../api/api';\n\nimport { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\n\ntype Props = {\n  postDetail: Post | null;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  postDetail,\n}) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isOpenForm, setOpenForm] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [isError, setError] = useState(false);\n\n  const fetchingComments = async (id: number) => {\n    setLoading(true);\n    setComments([]);\n\n    try {\n      const response = await getComments(id);\n\n      setComments(response);\n    } catch (error) {\n      setLoading(false);\n      setOpenForm(false);\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeComment = async (id: number) => {\n    try {\n      await deleteComment(id);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  useEffect(() => {\n    if (postDetail) {\n      fetchingComments(postDetail.id);\n    }\n\n    setOpenForm(false);\n  }, [postDetail]);\n\n  const onClickHandle = () => {\n    setOpenForm(true);\n  };\n\n  const onClickHandleRemove = (id: number) => {\n    removeComment(id);\n\n    setComments(currComments => currComments\n      .filter(comment => comment.id !== id));\n  };\n\n  const onClickHandleAdd = (comment: Comment) => {\n    setComments(currComments => ([...currComments, comment]));\n  };\n\n  return (\n    <>\n      {postDetail && (\n        <div className=\"content\" data-cy=\"PostDetails\">\n          <div className=\"content\" data-cy=\"PostDetails\">\n            <div className=\"block\">\n              <h2 data-cy=\"PostTitle\">\n                {`#${postDetail?.id}: ${postDetail?.title}`}\n              </h2>\n\n              <p data-cy=\"PostBody\">\n                {postDetail?.body}\n              </p>\n            </div>\n\n            <div className=\"block\">\n              {isError && (\n                <div\n                  className=\"notification is-danger\"\n                  data-cy=\"CommentsError\"\n                >\n                  Something went wrong\n                </div>\n              )}\n\n              {isLoading\n                ? <Loader />\n                : (\n                  <>\n                    {!comments.length && !isError && (\n                      <p\n                        className=\"title is-4\"\n                        data-cy=\"NoCommentsMessage\"\n                      >\n                        No comments yet\n                      </p>\n                    )}\n\n                    {!!comments.length && !isError && (\n                      <>\n                        <p className=\"title is-4\">Comments:</p>\n\n                        {comments.map(({\n                          id,\n                          name,\n                          email,\n                          body,\n                        }) => (\n                          <article\n                            key={id}\n                            className=\"message is-small\"\n                            data-cy=\"Comment\"\n                          >\n                            <div className=\"message-header\">\n                              <a href={`mailto:${email}`} data-cy=\"CommentAuthor\">\n                                {name}\n                              </a>\n                              <button\n                                data-cy=\"CommentDelete\"\n                                type=\"button\"\n                                className=\"delete is-small\"\n                                aria-label=\"delete\"\n                                onClick={() => onClickHandleRemove(id)}\n                              >\n                                delete button\n                              </button>\n                            </div>\n\n                            <div\n                              className=\"message-body\"\n                              data-cy=\"CommentBody\"\n                            >\n                              {body}\n                            </div>\n                          </article>\n                        ))}\n                      </>\n                    )}\n\n                    {!isOpenForm && !isError && (\n                      <button\n                        data-cy=\"WriteCommentButton\"\n                        type=\"button\"\n                        className=\"button is-link\"\n                        onClick={onClickHandle}\n                      >\n                        Write a comment\n                      </button>\n                    )}\n                  </>\n                )}\n            </div>\n\n            {isOpenForm && (\n              <NewCommentForm\n                postId={postDetail?.id || 0}\n                commentsLength={comments.length}\n                onClickHandleAdd={onClickHandleAdd}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[];\n  user: User | null;\n  onChangeUser: (user: User) => void;\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  user,\n  onChangeUser,\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const dropDownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const hadnleOutsideClick = (e: MouseEvent) => {\n      if (dropDownRef.current\n        && !dropDownRef.current.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('click', hadnleOutsideClick);\n\n    return () => {\n      document.removeEventListener('click', hadnleOutsideClick);\n    };\n  }, [dropDownRef]);\n\n  const onClickButton = () => {\n    setOpen(state => !state);\n  };\n\n  const onClickUser = (newUser: User) => {\n    onChangeUser(newUser);\n    setOpen(false);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames(\n        'dropdown',\n        { 'is-active': isOpen },\n      )}\n      ref={dropDownRef}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={onClickButton}\n        >\n          <span>\n            {user?.name || 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <ul className=\"dropdown-content\">\n          {users.map(currUser => (\n            <li key={currUser.id}>\n              <a\n                href={`#user-${currUser.id}`}\n                className={classNames(\n                  'dropdown-item',\n                  { 'is-active': currUser.id === user?.id },\n                )}\n                onClick={() => onClickUser(currUser)}\n              >\n                {currUser.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { getPosts, getUsers } from './api/api';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isPostsVisible, setPostsVisible] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n\n  const fetchingUsers = async () => {\n    try {\n      const response = await getUsers();\n\n      setUsers(response);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const fetchingPosts = async () => {\n    if (!selectedUser) {\n      return;\n    }\n\n    setPostsVisible(false);\n    setLoading(true);\n\n    try {\n      const response = await getPosts(selectedUser.id);\n\n      setPosts(response);\n      setPostsVisible(true);\n    } catch (error) {\n      setPostsVisible(false);\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchingUsers();\n  }, []);\n\n  useEffect(() => {\n    fetchingPosts();\n  }, [selectedUser]);\n\n  const onChangeUser = (user: User) => {\n    setSelectedUser(user);\n    setSelectedPost(null);\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  user={selectedUser}\n                  onChangeUser={onChangeUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {isLoading && <Loader />}\n\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {isError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {isPostsVisible && (\n                  <PostsList\n                    posts={posts}\n                    selectedPostId={selectedPost?.id || 0}\n                    onPost={setSelectedPost}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPost },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              <PostDetails\n                postDetail={selectedPost}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}